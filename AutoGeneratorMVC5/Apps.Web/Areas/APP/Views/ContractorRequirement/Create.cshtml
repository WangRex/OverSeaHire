@model Apps.Models.App.App_RequirementModel
@using Apps.Web.Core;
@using Apps.Common;
@using Apps.Models.App;
@using Apps.Web;
@using Apps.Locale;
@using Apps.Models.Sys;
@{
    ViewBag.Title = "创建";
    Layout = "~/Views/Shared/_Index_LayoutEdit.cshtml";
    List<permModel> perm = null;
}

<style>
    .saveBtn {
        position: fixed;
        height: 28px;
        background-color: rgb(250, 250, 250);
        padding-top: 4px;
        padding-left: 5px;
        border-bottom: 1px solid;
        width: 577px;
        z-index: 9999;
    }
</style>

<script src="~/Scripts/editor/ueditor.config.js"></script>
<script src="~/Scripts/editor/ueditor.all.min.js"></script>

<script type="text/javascript">
    $(function () {
        var ue = UE.getEditor('Description', {
            toolbars: [[
                'fullscreen',
                'bold', 'italic', 'underline', 'forecolor', 'insertorderedlist',
                'fontfamily', 'fontsize',
                'justifyleft', 'justifycenter',
                'link', 'unlink',
                'simpleupload', 'snapscreen'
            ]],
            serverUrl: "/Core/controller.ashx"
        });
        $("#Tag").on("click", function () {
            var Tags = $("#Tag").val();
            $("#modalwindow").html("<iframe width='100%' height='99%'  frameborder='0' src='@Url.Action("AddTag")?Tags=" + Tags+"'></iframe>");
            $("#modalwindow").window({ title: '添加标签', width: 700, height: 400, iconCls: 'fa fa-pencil' }).window('open');
        });
        $("#PromiseMoney").change(function () {
            CalcTotalServiceMoney();
        });
        $("#ServiceMoney").change(function () {
            CalcTotalServiceMoney();
        });
        $("#ServiceTailMoney").change(function () {
            CalcTotalServiceMoney();
        });
        $("#btnSave").click(function () {
            if ($("form").valid()) {
                $.ajax({
                    url: "@Url.Action("Create")",
                    type: "Post",
                    data: $("form").serialize(),
                    dataType: "json",
                    success: function (data) {
                        if (data.type == 1) {
                            $("#btnReturn").click();
                        }
                        else {
                            $.messageBox5s('@Resource.Tip', data.message);
                        }
                    }
                });
            }
            return false;
        });
        $("#btnReturn").click(function () {
            frameReturnByClose();
        });
        $("#btnReturnTree").click(function () {
            $("#positiontree").window('close');
        });
        $("#btnSaveTree").click(function () {
            var nodes = $('#tt').tree('getChecked');	// get checked nodes
            var ids = '';
            var texts = '';
            nodes.forEach(function (value, index, array) {
                ids += ',' + value.id;
                texts += ',' + value.text;
            })
            if (ids != '') {
                ids = ids.substring(1);
                texts = texts.substring(1);
            }
            $("#PK_App_Position_Name").val(ids);
            $("#positiontreeinput").val(texts);
            $("#positiontree").window('close');
        });
        $("#positiontreeinput").click(function () {
            globalUtils.globalAjax("/App/Position/GetPosCombTree", {}, function (data) {
                var tree = data;
                $('#tt').tree({
                    data: tree,
                    animate: true,
                    checkbox: true,
                    onlyLeafCheck: true,
                    onLoadSuccess: function (node, data) {
                        var ids = $("#PK_App_Position_Name").val();
                        if (ids != '') {
                            var idArr = ids.split(",");
                            for (var i = 0; i < idArr.length; i++) {
                                // find a node and then select it
                                var node = $('#tt').tree('find', idArr[i]);
                                $('#tt').tree('check', node.target);
                            }
                        }
                    }
                });
                $("#positiontree").window({ title: '职位', width: 600, height: 400, iconCls: 'fa fa-pencil' }).window('open');
            }, "post");
        });
    });
    function CalcTotalServiceMoney() {
        var PromiseMoney = $("#PromiseMoney").val();
        var ServiceMoney = $("#ServiceMoney").val();
        var ServiceTailMoney = $("#ServiceTailMoney").val();
        var TotalServiceMoney = Number(PromiseMoney) + Number(ServiceMoney) + Number(ServiceTailMoney);
        $("#TotalServiceMoney").val(TotalServiceMoney);
    }
    function SetTips(tags) {
        $("#Tag").val(tags);
        $("#modalwindow").window('close');
    }
    //ifram 返回
    function frameReturnByClose() {
        var menuName = window.parent.$('#mainTab').tabs('getSelected').panel('options').title;
        var ptitle = window.parent.globalTabObj[menuName];
        window.parent.closeTab(menuName, ptitle, "app/Requirement", "fa fa-money");
    }
</script>

<div id="positiontree" class="easyui-window" data-options="modal:true,closed:true,minimizable:false,shadow:false" style="overflow-y:scroll">
    <div class="saveBtn">
        @Html.ToolButton("btnSaveTree", "fa fa-save", Resource.Save, true)
        @Html.ToolButton("btnReturnTree", "fa fa-reply", Resource.Reply, false)
    </div>
    <div style="position:relative; top:40px;"><ul id="tt" class="easyui-tree"></ul></div>
</div>

<div id="modalwindow" class="easyui-window" style="width:800px; height:400px;" data-options="modal:true,closed:true,minimizable:false,shadow:false"></div>
<div class="mvctool bgb">
    @Html.ToolButton("btnSave", "fa fa-save", Resource.Save, ref perm, "Save", true)
    @Html.ToolButton("btnReturn", "fa fa-reply", Resource.Reply, false)
</div>
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Id)
    <input id="CreateTime" type="hidden" name="CreateTime" value="2017-12-31" />
    <input id="ModificationTime" type="hidden" name="ModificationTime" value="2017-12-31" />
    <input id="ApplyCount" type="hidden" name="ApplyCount" value="0" />
    <table class="formtable">
        <tbody>
            <tr>
                <th>
                    @Html.LabelFor(model => model.Title)：
                </th>
                <td>
                    @Html.EditorFor(model => model.Title)
                </td>
                <td>@Html.ValidationMessageFor(model => model.Title)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.SubTitle)：
                </th>
                <td>
                    @Html.EditorFor(model => model.SubTitle)
                </td>
                <td>@Html.ValidationMessageFor(model => model.SubTitle)</td>
            </tr>
            @if (Session["ohadmin"].ToString() == "1")
            {
                <tr>
                    <th>
                        @Html.LabelFor(model => model.SwitchBtnOpen)：
                    </th>
                    <td>
                        @Html.SwitchButtonByEdit("SwitchBtnOpen", false)
                    </td>
                    <td>@Html.ValidationMessageFor(model => model.SwitchBtnOpen)</td>
                </tr>
            }
            <tr>
                <th>
                    @Html.LabelFor(model => model.Tag)：
                </th>
                <td>
                    @Html.TextBoxFor(model => model.Tag, new { @readonly = "readonly" })
                </td>
                <td>@Html.ValidationMessageFor(model => model.Tag)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.PK_App_Position_Name)：
                </th>
                <td>
                    @Html.HiddenFor(model => model.PK_App_Position_Name)
                    <input type="text" id="positiontreeinput" readonly="readonly" />
                </td>
                <td>@Html.ValidationMessageFor(model => model.PK_App_Position_Name)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.PK_App_Country_Name)：
                </th>
                <td>
                    @Html.DropDownListFor(model => model.PK_App_Country_Name, ViewBag.PK_App_Country_Name as SelectList, "---请选择---")
                </td>
                <td>@Html.ValidationMessageFor(model => model.PK_App_Country_Name)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.WorkLimitSex)：
                </th>
                <td>
                    @Html.DropDownListFor(model => model.WorkLimitSex, ViewBag.WorkLimitSex as SelectList)
                </td>
                <td>@Html.ValidationMessageFor(model => model.WorkLimitSex)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.WorkLimitAgeLow)：
                </th>
                <td>
                    @Html.EditorFor(model => model.WorkLimitAgeLow)
                </td>
                <td>@Html.ValidationMessageFor(model => model.WorkLimitAgeLow)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.WorkLimitAgeHigh)：
                </th>
                <td>
                    @Html.EditorFor(model => model.WorkLimitAgeHigh)
                </td>
                <td>@Html.ValidationMessageFor(model => model.WorkLimitAgeHigh)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.EnumWorkLimitDegree)：
                </th>
                <td>
                    @Html.DropDownListFor(model => model.EnumWorkLimitDegree, ViewBag.EnumWorkLimitDegree as SelectList, "---请选择---")
                </td>
                <td>@Html.ValidationMessageFor(model => model.EnumWorkLimitDegree)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.SalaryLow)：
                </th>
                <td>
                    @Html.EditorFor(model => model.SalaryLow)
                </td>
                <td>@Html.ValidationMessageFor(model => model.SalaryLow)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.SalaryHigh)：
                </th>
                <td>
                    @Html.EditorFor(model => model.SalaryHigh)
                </td>
                <td>@Html.ValidationMessageFor(model => model.SalaryHigh)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.PromiseMoney)：
                </th>
                <td>
                    @Html.EditorFor(model => model.PromiseMoney)
                </td>
                <td>@Html.ValidationMessageFor(model => model.PromiseMoney)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.ServiceMoney)：
                </th>
                <td>
                    @Html.EditorFor(model => model.ServiceMoney)
                </td>
                <td>@Html.ValidationMessageFor(model => model.ServiceMoney)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.ServiceTailMoney)：
                </th>
                <td>
                    @Html.EditorFor(model => model.ServiceTailMoney)
                </td>
                <td>@Html.ValidationMessageFor(model => model.ServiceTailMoney)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.TotalServiceMoney)：
                </th>
                <td>
                    @Html.TextBoxFor(model => model.TotalServiceMoney, new { @readOnly = "readOnly " })
                </td>
                <td>@Html.ValidationMessageFor(model => model.TotalServiceMoney)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.TotalHire)：
                </th>
                <td>
                    @Html.EditorFor(model => model.TotalHire)
                </td>
                <td>@Html.ValidationMessageFor(model => model.TotalHire)</td>
            </tr>
            @if (Session["ohadmin"].ToString() == "1" || Session["IdFlag"].ToString() == "1")
            {
                <tr>
                    <th>
                        @Html.LabelFor(model => model.PK_App_Customer_CustomerName)：
                    </th>
                    <td>
                        @Html.DropDownListFor(model => model.PK_App_Customer_CustomerName, ViewBag.PK_App_Customer_CustomerName as SelectList, "---请选择---")
                    </td>
                    <td>@Html.ValidationMessageFor(model => model.PK_App_Customer_CustomerName)</td>
                </tr>
            }
            <tr>
                <th>
                    @Html.LabelFor(model => model.SwitchBtnRecommend)：
                </th>
                <td>
                    @Html.SwitchButtonByEdit("SwitchBtnRecommend", false)
                </td>
                <td>@Html.ValidationMessageFor(model => model.SwitchBtnRecommend)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.CompanyName)：
                </th>
                <td>
                    @Html.EditorFor(model => model.CompanyName)
                </td>
                <td>@Html.ValidationMessageFor(model => model.CompanyName)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.TotalYear)：
                </th>
                <td>
                    @Html.EditorFor(model => model.TotalYear)
                </td>
                <td>@Html.ValidationMessageFor(model => model.TotalYear)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.TransactProvince)：
                </th>
                <td>
                    @Html.DropDownListFor(model => model.TransactProvince, ViewBag.TransactProvince as SelectList, "---请选择---")
                </td>
                <td>@Html.ValidationMessageFor(model => model.TransactProvince)</td>
            </tr>
            <tr>
                <th>
                    @Html.LabelFor(model => model.Description)：
                </th>
                <td style="padding:10px;">
                    @Html.TextAreaFor(model => model.Description, new { style = "width:675px;height:180px;" })
                </td>
                <td>@Html.ValidationMessageFor(model => model.Description)</td>
            </tr>
        </tbody>
    </table>
}
