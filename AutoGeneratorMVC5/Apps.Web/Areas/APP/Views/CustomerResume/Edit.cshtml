@model Apps.Models.App.App_CustomerModel
@using Apps.Web.Core;
@using Apps.Common;
@using Apps.Models.App;
@using Apps.Web;
@using Apps.Locale;
@using Apps.Models.Sys;
@{
    ViewBag.Title = "修改";
    Layout = "~/Views/Shared/_Index_LayoutEdit.cshtml";
    List<permModel> perm = null;
}
<script src="~/Scripts/template.js"></script>
<script src="~/Scripts/jquery.serializejson.js"></script>

<style>
    .saveBtn {
        position: absolute;
        height: 28px;
        background-color: rgb(250, 250, 250);
        padding-top: 4px;
        padding-left: 5px;
        border-bottom: 1px solid;
        width: 577px;
        z-index: 9999;
    }

    table, td {
        border: 1px solid #ddd;
    }

    #CustomerInfo {
        border-collapse: collapse;
        margin: 0 10px;
    }

    .TitleSpan {
        font-size: large;
        font-weight: bolder;
        background: #ccc;
    }

    .DetailsTable {
        width: 100%;
    }

        .DetailsTable input {
            width: 100px;
        }

    .fa-plus {
        cursor: pointer;
    }

    .fa-minus {
        cursor: pointer;
    }
</style>

<script type="text/javascript">
    $(function () {
        initTable();
        $("#btnSave").click(function () {
            var objsubmit = $("form").serializeJSON();
            var arrEdu = new Array();
            var arrWork = new Array();
            var arrMember = new Array();
            var edutrs = $("#EduTable").find("tbody tr");
            var worktrs = $("#WorkingCareerTable").find("tbody tr");
            var membertrs = $("#FamilyMemberTable").find("tbody tr");
            for (var i = 0; i < edutrs.length; i++) {
                var objEdu = {};
                var trtemp = edutrs[i];
                var StartDate = $(trtemp).find("input[name='StartDate']").val();
                var EndDate = $(trtemp).find("input[name='EndDate']").val();
                var School = $(trtemp).find("input[name='School']").val();
                var Major = $(trtemp).find("input[name='Major']").val();
                var Degree = $(trtemp).find("input[name='Degree']").val();
                var Certificate = $(trtemp).find("input[name='Certificate']").val();
                objEdu.StartDate = StartDate;
                objEdu.EndDate = EndDate;
                objEdu.School = School;
                objEdu.Major = Major;
                objEdu.Degree = Degree;
                objEdu.Certificate = Certificate;
                arrEdu.push(objEdu);
            }
            for (var i = 0; i < worktrs.length; i++) {
                var objWork = {};
                var trtemp = worktrs[i];
                var StartDate = $(trtemp).find("input[name='StartDate']").val();
                var EndDate = $(trtemp).find("input[name='EndDate']").val();
                var Company = $(trtemp).find("input[name='Company']").val();
                var Position = $(trtemp).find("input[name='Position']").val();
                var JobDescription = $(trtemp).find("input[name='JobDescription']").val();
                objWork.StartDate = StartDate;
                objWork.EndDate = EndDate;
                objWork.Company = Company;
                objWork.Position = Position;
                objWork.JobDescription = JobDescription;
                arrWork.push(objWork);
            }
            for (var i = 0; i < membertrs.length; i++) {
                var objMember = {};
                var trtemp = membertrs[i];
                var Name = $(trtemp).find("input[name='Name']").val();
                var Relation = $(trtemp).find("input[name='Relation']").val();
                var Age = $(trtemp).find("input[name='Age']").val();
                var Occupation = $(trtemp).find("input[name='Occupation']").val();
                objMember.Name = Name;
                objMember.Relation = Relation;
                objMember.Age = Age;
                objMember.Occupation = Occupation;
                arrMember.push(objMember);
            }
            objsubmit.arrEdu = arrEdu;
            objsubmit.arrWork = arrWork;
            objsubmit.arrMember = arrMember;
            if ($("form").valid()) {
                var data = {
                    strCustomerResumePost: JSON.stringify(objsubmit),
                    eduPosts: JSON.stringify(objsubmit.arrEdu),
                    workPosts: JSON.stringify(objsubmit.arrWork),
                    memberPosts: JSON.stringify(objsubmit.arrMember),
                };
                $.ajax({
                    url: "@Url.Action("Edit")",
                    type: "Post",
                    data: data,
                    dataType: "json",
                    success: function (data) {
                        if (data.type == 1) {
                            frameReturnByClose();
                        }
                        else {
                            $.messageBox5s('@Resource.Tip', data.message);
                        }
                    }
                });
            }
            return false;
        });
        $("#positiontreeinput").click(function () {
            globalUtils.globalAjax("/App/Position/GetPosCombTree", {}, function (data) {
                var tree = data;
                $('#tt').tree({
                    data: tree,
                    animate: true,
                    checkbox: true,
                    onlyLeafCheck: true,
                    onLoadSuccess: function (node, data) {
                        var ids = $("#JobIntension").val();
                        if (ids) {
                            var idArr = ids.split(",");
                            for (var i = 0; i < idArr.length; i++) {
                                // find a node and then select it
                                var node = $('#tt').tree('find', idArr[i]);
                                $('#tt').tree('check', node.target);
                            }
                        }
                    }
                });
                $("#positiontree").window({ title: '职位', width: 600, height: 400, iconCls: 'fa fa-pencil' }).window('open');
            }, "post");
        });
        $("#btnSaveTree").click(function () {
            var nodes = $('#tt').tree('getChecked');	// get checked nodes
            var ids = '';
            var texts = '';
            nodes.forEach(function (value, index, array) {
                ids += ',' + value.id;
                texts += ',' + value.text;
            })
            if (ids != '') {
                ids = ids.substring(1);
                texts = texts.substring(1);
            }
            $("#JobIntension").val(ids);
            $("#positiontreeinput").val(texts);
            $("#positiontree").window('close');
        });
        $("#btnReturn").click(function () {
            frameReturnByClose();
        });
        $("#btnReturnTree").click(function () {
            $("#positiontree").window('close');
        });
        $("#btnSaveTree").click(function () {
            var nodes = $('#tt').tree('getChecked');	// get checked nodes
            var ids = '';
            var texts = '';
            nodes.forEach(function (value, index, array) {
                ids += ',' + value.id;
                texts += ',' + value.text;
            })
            if (ids != '') {
                ids = ids.substring(1);
                texts = texts.substring(1);
            }
            $("#JobIntension").val(ids);
            $("#positiontreeinput").val(texts);
            $("#positiontree").window('close');
        });
        $("#positiontreeinput").click(function () {
            globalUtils.globalAjax("/App/Position/GetPosCombTree", {}, function (data) {
                var tree = data;
                $('#tt').tree({
                    data: tree,
                    animate: true,
                    checkbox: true,
                    onlyLeafCheck: true,
                    onLoadSuccess: function (node, data) {
                        var ids = $("#JobIntension").val();
                        if (ids != '') {
                            var idArr = ids.split(",");
                            for (var i = 0; i < idArr.length; i++) {
                                // find a node and then select it
                                var node = $('#tt').tree('find', idArr[i]);
                                $('#tt').tree('check', node.target);
                            }
                        }
                    }
                });
                $("#positiontree").window({
                    title: '职位',
                    width: 600,
                    height: 400,
                    top: 350,
                    iconCls: 'fa fa-pencil'
                }).window('open');
            }, "post");
        });
        $("#EnumCustomerLevel").val('@Model.EnumCustomerLevel');
        $("#EnumCustomerType").val('@Model.EnumCustomerType');
        $("#EnumForeignLangGrade").val('@Model.EnumForeignLangGrade');
        $("#EnumDriverLicence").val('@Model.EnumDriverLicence');
        $("#AbroadExp").val('@Model.AbroadExp');
        $("#positiontreeinput").val('@Model.JobIntensionNames');
        $("#JobIntension").val('@Model.JobIntension');
    });
    //ifram 返回
    function frameReturnByClose() {
        window.parent.closeTab("修改简历", "简历管理", "app/CustomerResume", "fa fa-child");
    }
    function addRow(tableid, tplname) {
        $("#" + tableid).find("tbody").append(template(tplname, {}));
    }
    function delRow(obj) {
        //每次执行删除行，判断还有几个tr，如果只剩一个了，就给减号隐藏，并且标题加上时间安排
        var tr = $(obj).closest("tr");
        tr.remove();
    }
    function initTable() {
        globalUtils.globalAjax("@Url.Action("EditInit")", {id: "@Model.Id"}, function (data) {
            //初始化教育经历表格
            var arrEdu = data.eduExpPosts;
            $.each(arrEdu, function (idx, val) {
                $("#EduTable").find("tbody").append(template("tpl-edutr", val));
            });
            var arrWork = data.workExpPosts;
            $.each(arrWork, function (idx, val) {
                $("#WorkingCareerTable").find("tbody").append(template("tpl-worktr", val));
            });
            var arrMember = data.familyPosts;
            $.each(arrMember, function (idx, val) {
                $("#FamilyMemberTable").find("tbody").append(template("tpl-membertr", val));
            });
        }, "post");
    }
</script>

<div id="positiontree" class="easyui-window" data-options="modal:true,closed:true,minimizable:false,shadow:false" style="overflow-y:scroll">
    <div class="saveBtn">
        @Html.ToolButton("btnSaveTree", "fa fa-save", Resource.Save, true)
        @Html.ToolButton("btnReturnTree", "fa fa-reply", Resource.Reply, false)
    </div>
    <div style="position:relative;top:40px;"><ul id="tt" class="easyui-tree"></ul></div>
</div>
<div class="mvctool bgb">
    @Html.ToolButton("btnSave", "fa fa-save", Resource.Save, ref perm, "Save", true)
    @Html.ToolButton("btnReturn", "fa fa-reply", Resource.Reply, false)
</div>
@* 教育经历tr模板 *@
<script id="tpl-edutr" type="text/html">
    <tr>
        <td>
            <input type="text" name="StartDate" value="{{StartDate}}" />~<input type="text" name="EndDate" value="{{EndDate}}" />
        </td>
        <td>
            <input type="text" name="School" value="{{School}}" />
        </td>
        <td>
            <input type="text" name="Major" value="{{Major}}" />
        </td>
        <td>
            <input type="text" name="Degree" value="{{Degree}}" />
        </td>
        <td>
            <input type="text" name="Certificate" value="{{Certificate}}" />
        </td>
        <td><span class="fa fa-minus" onclick="delRow(this)"></span></td>
    </tr>
</script>
@* 工作经历tr模板 *@
<script id="tpl-worktr" type="text/html">
    <tr>
        <td>
            <input type="text" name="StartDate" value="{{StartDate}}" />~<input type="text" name="EndDate" value="{{EndDate}}" />
        </td>
        <td>
            <input type="text" name="Company" value="{{Company}}" />
        </td>
        <td>
            <input type="text" name="Position" value="{{Position}}" />
        </td>
        <td>
            <input type="text" name="JobDescription" value="{{JobDescription}}" />
        </td>
        <td><span class="fa fa-minus" onclick="delRow(this)"></span></td>
    </tr>
</script>
@* 家庭成员tr模板 *@
<script id="tpl-membertr" type="text/html">
    <tr>
        <td>
            <input type="text" name="Name" value="{{Name}}" />
        </td>
        <td>
            <input type="text" name="Relation" value="{{Relation}}" />
        </td>
        <td>
            <input type="text" name="Age" value="{{Age}}" />
        </td>
        <td>
            <input type="text" name="Occupation" value="{{Occupation}}" />
        </td>
        <td><span class="fa fa-minus" onclick="delRow(this)"></span></td>
    </tr>
</script>
@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreateTime)
    @Html.HiddenFor(model => model.ModificationTime)
    @Html.HiddenFor(model => model.CreateUserName)
    @Html.HiddenFor(model => model.ModificationUserName)
    @Html.HiddenFor(model => model.SortCode)
    @Html.HiddenFor(model => model.ParentId)
    <table id="CustomerInfo">
        <tbody>
            @if (Session["IdFlag"].ToString() == "1" || Session["ohadmin"].ToString() == "1")
            {
                <tr>
                    <th>
                        @Html.LabelFor(model => model.SwitchBtnRecommend)：
                    </th>
                    <td>
                        @if (Model.SwitchBtnRecommend == "1")
                        {
                            @Html.SwitchButtonByEdit("SwitchBtnRecommend", true)
                        }
                        else
                        {
                            @Html.SwitchButtonByEdit("SwitchBtnRecommend", false)
                        }
                    </td>
                    <td>@Html.ValidationMessageFor(model => model.SwitchBtnRecommend)</td>
                </tr>
            }
            <tr>
                <td colspan="2" align="center">申请职位:</td>
                <td colspan="4">
                    @Html.EditorFor(model => model.JobIntension)
                </td>
                <td rowspan="5">
                    @Html.HiddenFor(model => model.CustomerPhoto)
                    <img class="expic" src="@((Model.CustomerPhoto==null||Model.CustomerPhoto=="")?"/Content/Images/NotPic.jpg":Model.CustomerPhoto)" /><br />
                    <a href="javascript:$('#FileUpload').trigger('click');" class="files">@Resource.Browse</a>
                    <a onclick="ClearImg('CustomerPhoto');" class="files">删除</a>
                    <input type="file" class="displaynone" id="FileUpload" name="FileUpload" onchange="Upload('SingleFile', 'CustomerPhoto', 'FileUpload','1','1');" />
                    <span class="uploading">@Resource.Uploading</span>
                </td>
            </tr>
            <tr>
                <td rowspan="2" align="center">
                    Name
                    <br />
                    姓名:
                </td>
                <td align="center">
                    Chinese
                    <br />
                    中文
                </td>
                <td>@Html.EditorFor(model => model.CustomerName)</td>
                <td align="center">
                    Sex
                    <br />
                    性别
                </td>
                <td>
                    @Html.EditorFor(model => model.Sex)
                </td>
            </tr>
            <tr>
                <td align="center">
                    English
                    <br />
                    英文
                </td>
                <td>@Html.EditorFor(model => model.EnglishName)</td>
                <td align="center">
                    Marital Status
                    <br />
                    婚  姻
                </td>
                <td>
                    @Html.EditorFor(model => model.MaritalStatus)
                </td>
            </tr>
            <tr>
                <td colspan="2" align="center">
                    电  话
                </td>
                <td>
                    @Html.EditorFor(model => model.Phone)
                </td>
                <td align="center">
                    Age
                    <br />
                    年  龄
                </td>
                <td>
                    @Html.EditorFor(model => model.Age)
                </td>
            </tr>
            <tr>
                <td colspan="2" align="center">
                    Passport No.
                    <br />
                    护照号码
                </td>
                <td>
                    @Html.EditorFor(model => model.PassportNo)
                </td>
                <td align="center">
                    Height
                    <br />
                    身  高
                </td>
                <td>
                    @Html.EditorFor(model => model.Height)
                </td>
            </tr>
            <tr>
                <td colspan="2" align="center">
                    Address
                    <br />
                    籍  贯
                </td>
                <td>
                    @Html.EditorFor(model => model.BirthPlace)
                </td>
                <td align="center">
                    Weight
                    <br />
                    体  重
                </td>
                <td>
                    @Html.EditorFor(model => model.Weight)
                </td>
                <td align="center">
                    Race
                    <br />
                    民  族
                </td>
                <td>
                    @Html.EditorFor(model => model.Nation)
                </td>
            </tr>
            <tr>
                <td colspan="2" align="center">
                    Working Overseas
                    <br />
                    出国经历
                </td>
                <td>
                    @Html.DropDownListFor(model => model.AbroadExp, ViewBag.AbroadExp as SelectList, "---请选择---")
                </td>
                <td align="center">
                    English
                    <br />
                    英  语
                </td>
                <td>
                    @Html.DropDownListFor(model => model.EnumForeignLangGrade, ViewBag.EnumForeignLangGrade as SelectList, "---请选择---")
                </td>
                <td align="center">
                    Religion
                    <br />
                    宗教信仰
                </td>
                <td>
                    @Html.EditorFor(model => model.Religion)
                </td>
            </tr>
            <tr>
                <td colspan="2" align="center">
                    期望职位
                </td>
                <td>
                    <input type="text" name="JobIntension" />
                </td>
                <td align="center">
                    期望国家
                </td>
                <td>
                    <input type="text" />
                </td>
                <td align="center">
                    驾照
                </td>
                <td>
                    @Html.DropDownListFor(model => model.EnumDriverLicence, ViewBag.EnumDriverLicence as SelectList, "---请选择---")
                </td>
            </tr>
            <tr class="TitleSpan">
                <td colspan="7">Educational Background  教育/培训经历</td>
            </tr>
            <tr>
                <td colspan="7">
                    <table id="EduTable" class="DetailsTable">
                        <thead>
                            <tr>
                                <td>
                                    From…To…
                                    <br />
                                    起止时间
                                </td>
                                <td>
                                    School
                                    <br />
                                    学  校  名  称
                                </td>
                                <td>
                                    Majored in
                                    <br />
                                    专  业
                                </td>
                                <td>
                                    Qualification
                                    <br />
                                    学  历
                                </td>
                                <td>
                                    Certificate
                                    <br />
                                    证书
                                </td>
                                <td>操作&nbsp;<span class="fa fa-plus" onclick="addRow('EduTable', 'tpl-edutr')"></span></td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </td>
            </tr>
            <tr class="TitleSpan">
                <td colspan="7">Working Career  工作经历</td>
            </tr>
            <tr>
                <td colspan="7">
                    <table id="WorkingCareerTable" class="DetailsTable">
                        <thead>
                            <tr>
                                <td>
                                    From…To…
                                    <br />
                                    起止时间
                                </td>
                                <td>
                                    Employer
                                    <br />
                                    工  作  单  位
                                </td>
                                <td>
                                    Working as
                                    <br />
                                    工  种
                                </td>
                                <td>
                                    Job description
                                    <br />
                                    （工作内容）
                                </td>
                                <td>操作&nbsp;<span class="fa fa-plus" onclick="addRow('WorkingCareerTable', 'tpl-worktr')"></span></td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </td>
            </tr>
            <tr class="TitleSpan">
                <td colspan="7">Family Member  家庭成员</td>
            </tr>
            <tr>
                <td colspan="7">
                    <table id="FamilyMemberTable" class="DetailsTable">
                        <thead>
                            <tr>
                                <td>
                                    Name
                                    <br />
                                    姓  名
                                </td>
                                <td>
                                    Relationship
                                    <br />
                                    与本人关系
                                </td>
                                <td>
                                    Age
                                    <br />
                                    年龄
                                </td>
                                <td>
                                    Occupation
                                    <br />
                                    职  业
                                </td>
                                <td>操作&nbsp;<span class="fa fa-plus" onclick="addRow('FamilyMemberTable', 'tpl-membertr')"></span></td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </td>
            </tr>
            <tr>
                <td align="center">
                    Self assessment
                    <br />
                    自我评价
                </td>
                <td colspan="6">
                    @Html.TextAreaFor(m => m.Introduction, new { @style = "width:100%;height:100px;" })
                </td>
            </tr>
        </tbody>
    </table>
}
